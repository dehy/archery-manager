server {
    listen 80 default_server;

    sendfile off;
    error_log /dev/stderr info;
    access_log /dev/stdout;
    keepalive_timeout 45s;
    index index.php;

    root /app/public;

    client_max_body_size 256m;

    location ~* \.mjs$ {
        types {
            application/javascript mjs;
        }
    }

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /index.php$is_args$args;
    }

    # PROD
    #location ~ ^/index\.php(/|$) {
    location ~ ^/[^\.]+\.php(/|$) {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        #internal;

        fastcgi_param SERVER_NAME $server_name;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        #return 404;
    }
}
